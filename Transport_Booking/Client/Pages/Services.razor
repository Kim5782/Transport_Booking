@page "/services"
@using Transport_Booking.Shared.Domain
@inject NavigationManager NavigationManager

<h3>Service Booking Form</h3>

<EditForm Model="@bookingModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="name">Name *</label>
            <InputText id="name" class="form-control" @bind-Value="@bookingModel.Name" required />
        </div>
        <div class="form-group col-md-6">
            <label for="email">E-mail *</label>
            <InputText id="email" class="form-control" @bind-Value="@bookingModel.Email" type="email" required />
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="contactNumber">Contact Number *</label>
            <InputText id="contactNumber" class="form-control" @bind-Value="@bookingModel.ContactNumber" required />
        </div>
        <div class="form-group col-md-6">
            <label for="nationality">Nationality *</label>
            <InputSelect id="nationality" class="form-control" @bind-Value="@bookingModel.Nationality">
                <option value="">Select Nationality</option>
                @foreach (var country in Countries)
                {
                    <option value="@country">@country</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="tripType">Trip Type *</label>
            <InputSelect id="tripType" class="form-control" @bind-Value="@bookingModel.TripType">
                <option value="">Select Trip Type</option>
                <option value="One-Way">One-Way</option>
                <option value="Two-Way">Two-Way</option>
                <option value="Day Trip">Day Trip</option>
            </InputSelect>
        </div>
        <div class="form-group col-md-4">
            <label for="carModel">Car Model *</label>
            <InputSelect id="carModel" class="form-control" @bind-Value="@bookingModel.CarModel">
                <option value="">Select Car Model</option>
                <!-- Populate with actual car model options -->
            </InputSelect>
        </div>
        <div class="form-group col-md-4">
            <label for="passengers">Passengers (Adult & Child) *</label>
            <InputNumber id="passengers" class="form-control" @bind-Value="@bookingModel.Passengers" min="1" required />
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="luggage">Luggages *</label>
            <InputNumber id="luggage" class="form-control" @bind-Value="@bookingModel.Luggages" min="0" required />
        </div>
        <div class="form-group col-md-4">
            <label for="pickUpDate">Pick Up Date *</label>
            <InputDate id="pickUpDate" class="form-control" @bind-Value="@bookingModel.PickUpDate" required />
        </div>
        <div class="form-group col-md-4">
            <label for="pickUpTime">Pick Up Time *</label>
            <InputSelect id="pickUpTime" class="form-control" @bind-Value="@bookingModel.PickUpTime" required>
                <option value="">Select Pick Up Time</option>
                @for (int hour = 0; hour < 24; hour++) // Loop to include all 24 hours
                {
                    int displayHour = hour;
                    string amPm = "AM";

                    if (hour > 11)
                    {
                        amPm = "PM";
                        if (hour > 12)
                        {
                            displayHour -= 12;
                        }
                    }

                    if (hour == 0) // Midnight is shown as 12 AM
                    {
                        displayHour = 12;
                    }

                    string displayTime = $"{displayHour:00}:00 {amPm}";
                    <option value="@displayTime">@displayTime</option>

                    if (hour != 11 && hour != 23) // To add 30 minutes interval only for times other than 11:30 AM and 11:30 PM
                    {
                        displayTime = $"{displayHour:00}:30 {amPm}";
                        <option value="@displayTime">@displayTime</option>
                    }
                }
            </InputSelect>
        </div>

    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="pickUpAddress">Pick Up Address *</label>
            <InputText id="pickUpAddress" class="form-control" @bind-Value="@bookingModel.PickUpAddress" required />
        </div>
        <div class="form-group col-md-6">
            <label for="dropOffAddress">Drop Off Address *</label>
            <InputText id="dropOffAddress" class="form-control" @bind-Value="@bookingModel.DropOffAddress" required />
        </div>
    </div>

    <div class="form-group">
        <label for="specialRequests">Special Requests/Enquiries</label>
        <InputTextArea id="specialRequests" class="form-control" @bind-Value="@bookingModel.SpecialRequests" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit Booking</button>
    </div>
</EditForm>

@code {
    private TransportBookingModel bookingModel = new TransportBookingModel();
    private List<string> Countries = new List<string> { "United States of America", "Canada","China", "United Kingdom", "Australia", "Germany" ,"Japan","Korea" };

    private void HandleValidSubmit()
    {
        // Process the booking here

        // After processing, you can redirect the user to a confirmation page
        NavigationManager.NavigateTo("/booking-confirmation");
    }

    protected override void OnInitialized()
    {
        // Initialize with default values
        bookingModel.PickUpDate = DateTime.Today;
        bookingModel.PickUpTime = "12:00 AM"; // Default to midnight
    }

    public class TransportBookingModel
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string ContactNumber { get; set; }
        public string Nationality { get; set; }
        public string TripType { get; set; }
        public string CarModel { get; set; }
        public int Passengers { get; set; }
        public int Luggages { get; set; }
        public DateTime PickUpDate { get; set; }
        public string PickUpTime { get; set; }
        public string PickUpAddress { get; set; }
        public string DropOffAddress { get; set; }
        public string SpecialRequests { get; set; }
        // Add validation attributes and other properties as needed
    }
}

