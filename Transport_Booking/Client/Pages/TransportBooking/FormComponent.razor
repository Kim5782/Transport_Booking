@inject HttpClient _client

<EditForm Model="@transportBooking" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Staff:</label>
        <div>
            <InputSelect @bind-Value="transportBooking.StaffId" class="form-control">
                <option value="">--Select Staff--</option>
                @if (Staffs != null)
                {
                    foreach (var staff in Staffs)
                    {
                        <option value="@staff.Id">@staff.StaffName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => transportBooking.StaffId)" />
        </div>
    </div>
    </fieldset>

     <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Customer:</label>
        <div>
            <InputSelect @bind-Value="transportBooking.CustomerId" class="form-control">
                <option value="">--Select Customer--</option>
                @if (Customers != null)
                {
                    foreach (var customer in Customers)
                    {
                        <option value="@customer.Id">@customer.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => transportBooking.CustomerId)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Vehicle:</label>
        <div>
            <InputSelect @bind-Value="transportBooking.VehicleId" class="form-control">
                <option text="">--Select Vehicle--</option>
                @if (Vehicles != null)
                {
                    foreach (var vehicle in Vehicles)
                    {
                        <option value="@vehicle.Id">@vehicle.Model</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => transportBooking.VehicleId)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Date In:</label>
        <div>
            <InputDate @bind-Value="transportBooking.DateIn" class="form-control" />
            @if (transportBooking.Id > 0)
            {
                <div class="form-group">
                    <label>Date: </label>
                    <div>
                        <InputDate @bind-Value="@transportBooking.DateIn" class="form-control" />
                        <ValidationMessage For="@(() => transportBooking.DateIn)" />
                    </div>
                </div>
            }
            <ValidationMessage For="@(() => transportBooking.DateIn)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Date Out:</label>
        <div>
            <InputDate @bind-Value="transportBooking.DateOut" class="form-control" />
            @if (transportBooking.Id > 0)
            {
                <div class="form-group">
                    <label>Date: </label>
                    <div>
                        <InputDate @bind-Value="@transportBooking.DateOut" class="form-control" />
                        <ValidationMessage For="@(() => transportBooking.DateOut)" />
                    </div>
                </div>
            }
            <ValidationMessage For="@(() => transportBooking.DateOut)" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Pick-up Location: </label>
        <div>
            <InputText @bind-Value="@transportBooking.PickupLocation" class="form-control" />
            <ValidationMessage For="@(() => transportBooking.PickupLocation )" />
        </div>
    </div>
    </fieldset>

    <fieldset disabled="@Disabled" >
    <div class="form-group">
        <label>Reason: </label>
        <div>
            <InputText @bind-Value="@transportBooking.DropOffLocation" class="form-control" />
            <ValidationMessage For="@(() => transportBooking.DropOffLocation)" />
        </div>
    </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="transportbookings" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public TransportBooking? transportBooking { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Staff>? Staffs;
    private IList<Customer>? Customers;
    private IList<Vehicle>? Vehicles;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

}
