@page "/register"

<h3>Register</h3>

<EditForm Model="@userRegistrationModel" OnValidSubmit="HandleRegistration" class="p-4">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="@userRegistrationModel.Email" placeholder="Enter email" />
        <ValidationMessage For="@(() => userRegistrationModel.Email)" class="text-danger" />
    </div>

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="@userRegistrationModel.Username" placeholder="Choose a username" />
        <ValidationMessage For="@(() => userRegistrationModel.Username)" class="text-danger" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="@userRegistrationModel.Password" placeholder="Create a password" type="password" />
        <ValidationMessage For="@(() => userRegistrationModel.Password)" class="text-danger" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Register</button>
</EditForm>

@code {
    private UserRegistrationModel userRegistrationModel = new UserRegistrationModel();

    private async Task HandleRegistration()
    {
        // Implement registration logic here
        // This should include validation checks and possibly communicating with a backend server
    }

    public class UserRegistrationModel
    {
        
        
        public string Email { get; set; }

        
        
        public string Username { get; set; }

       
        public string Password { get; set; }
    }
}